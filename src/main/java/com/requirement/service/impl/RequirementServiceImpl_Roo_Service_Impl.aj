// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.requirement.service.impl;

import com.requirement.domain.Requirement;
import com.requirement.repository.RequirementRepository;
import com.requirement.service.impl.RequirementServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect RequirementServiceImpl_Roo_Service_Impl {
    
    declare @type: RequirementServiceImpl: @Service;
    
    declare @type: RequirementServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private RequirementRepository RequirementServiceImpl.requirementRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param requirementRepository
     */
    @Autowired
    public RequirementServiceImpl.new(RequirementRepository requirementRepository) {
        setRequirementRepository(requirementRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return RequirementRepository
     */
    public RequirementRepository RequirementServiceImpl.getRequirementRepository() {
        return requirementRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param requirementRepository
     */
    public void RequirementServiceImpl.setRequirementRepository(RequirementRepository requirementRepository) {
        this.requirementRepository = requirementRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param requirement
     * @return Map
     */
    public Map<String, List<MessageI18n>> RequirementServiceImpl.validate(Requirement requirement) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param requirement
     */
    @Transactional
    public void RequirementServiceImpl.delete(Requirement requirement) {
        getRequirementRepository().delete(requirement);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Requirement> RequirementServiceImpl.save(Iterable<Requirement> entities) {
        return getRequirementRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void RequirementServiceImpl.delete(Iterable<Long> ids) {
        List<Requirement> toDelete = getRequirementRepository().findAll(ids);
        getRequirementRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Requirement
     */
    @Transactional
    public Requirement RequirementServiceImpl.save(Requirement entity) {
        return getRequirementRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Requirement
     */
    public Requirement RequirementServiceImpl.findOne(Long id) {
        return getRequirementRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Requirement
     */
    public Requirement RequirementServiceImpl.findOneForUpdate(Long id) {
        return getRequirementRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Requirement> RequirementServiceImpl.findAll(Iterable<Long> ids) {
        return getRequirementRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Requirement> RequirementServiceImpl.findAll() {
        return getRequirementRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long RequirementServiceImpl.count() {
        return getRequirementRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Requirement> RequirementServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getRequirementRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Requirement> RequirementServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getRequirementRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Requirement> RequirementServiceImpl.getEntityType() {
        return Requirement.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> RequirementServiceImpl.getIdType() {
        return Long.class;
    }
    
}
